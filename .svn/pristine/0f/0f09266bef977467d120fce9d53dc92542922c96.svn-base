package actions.listen;

import java.util.Iterator;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;

import actions.OpenModule;
import helpers.Hooks;
import helpers.Log;
import helpers.ReadConfig;
import helpers.SimplifyUtils;
import pageobjects.Listen.UIListenHome;
import pageobjects.Listen.UIListenProfileCreation;

public class ProfileHomeAction {

	WebDriver driver;

	public ProfileHomeAction()
	{
		driver = Hooks.driver;
	}

	public void deleteAllProfilesExcept() {

		UIListenHome listenHome = new UIListenHome(driver);
		SimplifyUtils utils = new SimplifyUtils();

		Iterator<String> iterator = ReadConfig.requiredProfiles.iterator();

		//checking for how many pages are present in listen home
		for (int i=1; i<Integer.parseInt(listenHome.totalPagesInListenHome.getText()) ; i++) {

			//checking for how many profiles are present in one page
			for (int j=1; j <= listenHome.profileNamesInListenHome.size(); j++) {

				//checking if the profile should be deleted or shouldn't be
				if (!ReadConfig.requiredProfiles.contains(listenHome.profileNamesInListenHome.get(j).getText())){

					String GridBox = "(//*[@id='dashboardDiv']//div[starts-with(@class,'widget-item')])";
					String indexNum = String.valueOf(j);


					String DeleteOption = "//a[@data-original-title='Delete Profile']";

					String finalXpath  = GridBox+ indexNum + DeleteOption;


				}

			}
		}

		listenHome.nextPage.click();
	}

	public void editProfile(String profileToEdit){

		OpenModule openModule = new  OpenModule();
		UIListenProfileCreation profileCreation = new UIListenProfileCreation(driver);
		UIListenHome uiListenHome = new UIListenHome(driver);
		SimplifyUtils utils = new SimplifyUtils();

		String profileId = null;

		utils.waitForElementToBeClickable(uiListenHome.newListeningProfile, 30);

		//Getting the page count in listen home
		int pageCount = Integer.parseInt(uiListenHome.totalPagesInListenHome.getText());

		breakloop:

			//To go through all pages in listen home and get the required profile id so that profile id can be passed 
			for (int j = 1; j < pageCount;j++) 
			{
				utils.s360sleep(600);

				// To check if the profile is present in the current page
				for (int i = 0; i < uiListenHome.profileNamesInListenHome.size(); i++) 
				{
					utils.s360sleep(600);

					String profileToMatch = uiListenHome.profileNamesInListenHome.get(i).getText();

					//Checking if profile Name Matches
					if (profileToMatch.equalsIgnoreCase(profileToEdit)) 
					{
						utils.s360sleep(600);

						profileId = uiListenHome.profileNamesInListenHome.get(i).getAttribute("id");
						profileId = profileId.replace("pname", "");

						break breakloop;

					}
				}

				//if the profiles are not found in the current page
				if(j <= pageCount && profileId == null )
				{
					uiListenHome.nextPage.click();

					utils.s360sleep(800);
				}
				else
				{
					break;
				}
			}

		//Edit the profile in Current Page
		if(profileId != null)
		{
			//getting the total profiles in current page
			int profilesInCurrentPg = uiListenHome.profileNamesInListenHome.size();
			
			//iterating through the profiles in current page to edit
			for (int i = 0; i < profilesInCurrentPg; i++) 
			{
				utils.s360sleep(500);

				if(i>2)
				{
					utils.scrolltoElementByLocator(uiListenHome.optionsDropDown.get(i));
				}

				utils.s360sleep(500);

				uiListenHome.optionsDropDown.get(i).click();

				String dfsf= uiListenHome.editProfileFromDropDown.get(i).getAttribute("href");

				if (uiListenHome.editProfileFromDropDown.get(i).getAttribute("href").contains(profileId)) 
				{
					utils.waitForElementToBeClickable(uiListenHome.editProfileFromDropDown.get(i), 30);
					utils.s360sleep(500);

					uiListenHome.editProfileFromDropDown.get(i).click();

					break;
				}

			}
		}

	}
	
	public void editProfileTOMODIFY(String profileToEdit){

		OpenModule openModule = new  OpenModule();
		UIListenProfileCreation profileCreation = new UIListenProfileCreation(driver);
		UIListenHome uiListenHome = new UIListenHome(driver);
		SimplifyUtils utils = new SimplifyUtils();

		String profileId = null;

		utils.waitForElementToBeClickable(uiListenHome.newListeningProfile, 30);

		//Getting the page count in listen home
		int pageCount = Integer.parseInt(uiListenHome.totalPagesInListenHome.getText());

		breakloop:

			//To go through all pages in listen home and get the required profile id so that profile id can be passed 
			for (int j = 1; j < pageCount;j++) 
			{
				utils.s360sleep(600);

				// To check if the profile is present in the current page
				for (int i = 0; i < uiListenHome.profileNamesInListenHome.size(); i++) 
				{
					utils.s360sleep(600);

					String profileToMatch = uiListenHome.profileNamesInListenHome.get(i).getText();

					//Checking if profile Name Matches
					if (profileToMatch.equalsIgnoreCase(profileToEdit)) 
					{
						utils.s360sleep(600);

						profileId = uiListenHome.profileNamesInListenHome.get(i).getAttribute("id");
						profileId = profileId.replace("pname", "");

						break breakloop;

					}
				}

				//if the profiles are not found in the current page
				if(j <= pageCount && profileId == null )
				{
					uiListenHome.nextPage.click();

					utils.s360sleep(800);
				}
				else
				{
					break;
				}
			}

		//Edit the profile in Current Page
		if(profileId != null)
		{
			int profilesInCurrentPg = uiListenHome.optionsDropDown.size();
			
			for (int i = 0; i < profilesInCurrentPg; i++) 
			{
				utils.s360sleep(500);

				if(i>2)
				{
					utils.scrolltoElementByLocator(uiListenHome.optionsDropDown.get(i));
				}

				utils.s360sleep(500);

				uiListenHome.optionsDropDown.get(i).click();

				String dfsf= uiListenHome.editProfileFromDropDown.get(i).getAttribute("href");

				if (uiListenHome.editProfileFromDropDown.get(i).getAttribute("href").contains(profileId)) 
				{
					utils.waitForElementToBeClickable(uiListenHome.editProfileFromDropDown.get(i), 30);
					utils.s360sleep(500);

					uiListenHome.editProfileFromDropDown.get(i).click();

					break;
				}

			}
		}

	}

	public void openMessagesOfProfile(String profileName){

		OpenModule openModule = new  OpenModule();
		UIListenProfileCreation profileCreation = new UIListenProfileCreation(driver);
		UIListenHome uiListenHome = new UIListenHome(driver);
		SimplifyUtils utils = new SimplifyUtils();

		String profileId = null;

		utils.waitForElementToBeClickable(uiListenHome.newListeningProfile, 30);

		uiListenHome.profileNamesInListenHome.size();

		int pageCount;

		pageCount = Integer.parseInt(uiListenHome.totalPagesInListenHome.getText());

		breakloop:

			for (int j = 1; j < pageCount;j++) 
			{
				utils.s360sleep(500);

				// To check if the profile is present in the current page

				for (int i = 0; i < uiListenHome.profileNamesInListenHome.size(); i++) 
				{
					utils.s360sleep(500);

					String profileToMatch = uiListenHome.profileNamesInListenHome.get(i).getText();

					if (profileToMatch.equalsIgnoreCase(profileName)) 
					{
						utils.s360sleep(500);

						profileId = uiListenHome.profileNamesInListenHome.get(i).getAttribute("id");

						profileId = profileId.replace("pname", "");

						break breakloop;

					}
				}

				if(j <= pageCount )
				{
					uiListenHome.nextPage.click();

					utils.s360sleep(500);
				}
				else
				{
					break;
				}
			}

		if(profileId != null)
		{
			for (int i = 0; i < uiListenHome.messagesOfProfile.size(); i++) 
			{
				utils.s360sleep(500);

				if(i>2)
				{
					utils.scrolltoElementByLocator(uiListenHome.messagesOfProfile.get(i));
				}

				if (uiListenHome.messagesOfProfile.get(i).getAttribute("href").contains(profileId)) 
				{
					utils.waitForElementToBeClickable(uiListenHome.messagesOfProfile.get(i), 30);

					utils.s360sleep(500);

					uiListenHome.messagesOfProfile.get(i).click();

					break;

				}
			}
		}
	}

}

